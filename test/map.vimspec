Describe map
  Before all
    let s:V = vital#of('vital')
    " ramda
    let s:Ramda = s:V.import('Ramda')
    let g:R = s:Ramda.new()
    " powerassert
    let PowerAssert = s:V.import('Vim.PowerAssert')
    let s:assert = PowerAssert.assert
  End

  It case-is-two-args
    let result = g:R.map({ v -> v + 1 }, [1, 2, 3])
    execute s:assert('result ==# [2, 3, 4]')
  End

  It case-is-one-args
    let result = g:R.map({ v -> v + 2 })([1, 2, 3])
    execute s:assert('result ==# [3, 4, 5]')
  End
End

" vim: foldmethod=marker
